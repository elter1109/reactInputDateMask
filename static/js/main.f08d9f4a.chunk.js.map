{"version":3,"sources":["utils.js","ReactInputDateMask.js","constants.js","App.js","reportWebVitals.js","index.js"],"names":["ua","window","navigator","userAgent","indexOf","mobile","hasOwnProperty","test","searchMobil","ieMobile","ReactInputDateMask","mask","showMaskOnFocus","showMaskOnHover","value","inputValue","className","onChange","undefined","disabled","readOnly","useState","setValue","toggleCursor","setCursor","start","end","positionCursor","setPosCursor","letterObject","setLetterObject","moveCursor","setMoveCursor","maskOnFocus","setMaskOnFocus","statePlaceholder","setStatePlaceholder","myRef","useRef","useEffect","current","setSelectionRange","valueObject","createObject","findDigitsOrLettersInValue","looking","separator","regex","digits","letters","Object","values","filter","el","map","search","length","isCurrValueHaveDigits","currValue","quantityDigits","resultIndexLetters","findIndex","quantityLetters","allDigits","Boolean","indexLetter","allLetters","trackingCursorPos","e","selectionStart","target","checkOneValue","val","valueString","position","newVal","letter","slice","d","m","y","string","newObject","forEach","index","deletingElement","pos","currentValue","newValue","newState","newStart","newEnd","prevState","join","keys","ref","placeholder","type","onClick","spellCheck","onInput","selectionEnd","curValue","inputType","nativeEvent","newSelectionStart","newSelectionEnd","nextValue","newPosStart","nextSelStart","onTouchStart","onFocus","onKeyDown","key","preventDefault","autoComplete","onPaste","pasteRaw","clipboardData","getData","paste","prevValue","postValue","newValueObject","arrayValue","push","newValueString","onMouseEnter","onMouseLeave","onBlur","App","setState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2NAAMA,EAAE,oBAAGC,OAAOC,iBAAV,aAAG,EAAkBC,iBAArB,QAAkC,IAME,IAAzBH,EAAGI,QAAQ,UAAqBJ,EAAGI,QAAQ,YAAvD,IACMC,EAASJ,OAAOK,eAAe,iBAL5C,SAAqBN,GAEjB,MADc,6EACDO,KAAKP,GAGyCQ,CAAYR,GAC9DS,EAAW,YAAYF,KAAKP,G,GACnB,UAAUO,KAAKP,G,MCJrC,SAASU,EAAT,GASgC,IAAD,MARCC,YAQD,MARQ,aAQR,MAPCC,uBAOD,aANCC,uBAMD,aALCC,MAAOC,OAKR,MALqB,GAKrB,MAJCC,iBAID,MAJa,GAIb,MAHCC,gBAGD,WAHYC,EAGZ,MAFCC,gBAED,aADCC,gBACD,WACDC,mBAAS,IADR,mBACpBP,EADoB,KACbQ,EADa,OAEOD,oBAAS,GAFhB,mBAEpBE,EAFoB,KAENC,EAFM,OAGYH,mBAAS,CAC5CI,MAAO,EACPC,IAAK,IALkB,mBAGpBC,EAHoB,KAGJC,EAHI,OAOaP,mBAAS,IAPtB,mBAOpBQ,EAPoB,KAONC,EAPM,OAQST,mBAAS,CACzCI,MAAO,GACPC,IAAK,KAVkB,mBAQpBK,EARoB,KAQRC,EARQ,OAYWX,oBAAS,GAZpB,mBAYpBY,EAZoB,KAYPC,EAZO,OAaqBb,mBAAS,IAb9B,mBAapBc,EAboB,KAaFC,EAbE,KAcrBC,EAAQC,iBAAO,MAErBC,qBAAU,WACNF,EAAMG,QAAQC,kBAAkBd,EAAeF,MAAOE,EAAeD,OACtE,CAACC,EAAeF,MAAOE,EAAeD,IAAKH,IAE9CgB,qBAAU,WACNF,EAAMG,QAAQC,kBAAkBV,EAAWN,MAAOM,EAAWL,OAC9D,CAACK,EAAWN,MAAOM,EAAWL,MAEjCa,qBAAU,WACN,IACMG,EAAcC,GADN5B,GAA0BJ,GAExCW,EAASoB,GACJ9B,IAAmBG,GAAYmB,GAAe,KACpD,CAACnB,EAAYH,IAEhB2B,qBAAU,WACN,IAAMV,EAAec,GAAahC,GAClCmB,EAAgBD,GAChBQ,EAAMG,QAAQC,kBAAkB,EAAG,KACpC,CAAC9B,IAEJ,IAQMiC,GAA6B,SAAC,GAAsB,IAArB9B,EAAoB,EAApBA,MAAO+B,EAAa,EAAbA,QAClCC,EAAYhC,EAAM,GAClBiC,EAAQ,CACVC,OAAQ,SACRC,QAAS,YAGb,OADoBC,OAAOC,OAAOrC,GAAOsC,QAAO,SAAAC,GAAE,OAAIA,IAAOP,KAAWQ,KAAI,SAACD,GAAD,OAAQA,EAAGE,OAAOR,EAAMF,OAAWO,QAAO,SAAAC,GAAE,OAAW,IAAPA,KACzGG,QAGjBC,GAAwB,SAACC,GAC3B,IAAMC,EAAiBf,GAA2B,CAAC9B,MAAO4C,EAAWb,QAAS,WACxEe,EAAqBV,OAAOC,OAAOO,GAAWG,WAAU,SAAAR,GAG1D,OAAkB,IADHA,EAAGE,OADJ,eAIZO,EAAkBlB,GAA2B,CAAC9B,MAAO4C,EAAWb,QAAS,YAC/E,MAAO,CACHkB,UAAWC,QAA2B,IAAnBL,GACnBM,YAAaL,EACbM,WAAYF,QAA4B,IAApBF,KAItBK,GAAoB,SAACC,GAAO,IAAD,EACIX,GAAsB3C,GAAhDiD,EADsB,EACtBA,UAAWE,EADW,EACXA,YACbI,EAAkBD,EAAEE,OAApBD,eACDN,EACIpC,EAAeF,QAAU4C,GACzBzC,EAAa,2BACND,GADK,IAERF,MAAO4C,EACP3C,IAAK2C,EAAiB,KAIvBJ,GAA+B,IAAhBA,GACtBrC,EAAa,2BACND,GADK,IAERF,MAAOwC,EACPvC,IAAKuC,EAAc,KAEvBzC,GAAWD,IAGXC,GAAWD,IAYbgD,GAAgB,SAACC,EAAKC,EAAaC,GACrC,IAQIC,EADEC,EAAS/C,EAAa6C,GAiB5B,OAdIC,EADW,MAAXC,EACkB,eAATjE,GAAkC,eAATA,EAAwB8D,EAAYI,MAAM,EAAG,GAAKJ,EAAYI,MAAM,EAAG,GACvF,MAAXD,EACW,eAATjE,GAAkC,eAATA,EAAwB8D,EAAYI,MAAM,EAAG,GAAKJ,EAAYI,MAAM,EAAG,GACvF,MAAXD,EACEH,EAAYI,MAAM,EAAG,IAEb,IAAbH,EACSD,EAAYI,MAAM,EAAG,GAErBJ,EAAYI,MAAM,EAAG,GAnBxB,CACVC,EAAG,6CACHC,EAAG,oCACHC,EAAG,4FACH,IAAK,KACL,IAAK,MAkBaJ,GAAQrE,KAAKoE,IAIjChC,GAAe,SAACsC,GAClB,IAAIC,EAAY,GAIhB,OAHA,YAAID,GAAQE,SAAS,SAAC9B,EAAI+B,GACtBF,EAAUE,EAAQ,GAAK/B,KAEpB6B,GAgFLG,GAAkB,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,aACrBC,EAAW3D,EAAayD,GAC1BG,EAAQ,2BACLF,GADK,kBAEPD,EAAME,IAEXlE,EAASmE,GACT,IAAMC,EAAWJ,EAAM,EACjBK,EAASD,EAAW,EAC1B9D,GAAa,SAACgE,GACV,OAAO,2BACAA,GADP,IAEInE,MAAOiE,EACPhE,IAAKiE,OAGL,OAAR1E,QAAQ,IAARA,KAAWiC,OAAOC,OAAOsC,GAAUI,KAAK,MA0EtCJ,IAAW,UAAAvC,OAAO4C,KAAKhF,UAAZ,eAAoB0C,QAAS,EAAIN,OAAOC,OAAOrC,GAAO+E,KAAK,IAAM/E,EAClF,OACI,uBAAOiF,IAAK1D,EAAO2D,YAAa7D,EAAkB8D,KAAK,MAChDC,QAtNK,SAAC9B,GACbD,GAAkBC,IAqNOpD,UAAWA,EAAWmF,WAAW,QAAQC,QA1KtD,SAAChC,GAAO,IAAD,EACuEA,EAArFE,OAASD,EADK,EACLA,eAAgBgC,EADX,EACWA,aAAqBC,EADhC,EACyBxF,MAAgCyF,EAAcnC,EAA5BoC,YAAcD,UAC5E,GAAIlG,GC3J2B,0BD2JjBkG,EAEVlB,GAAgB,CAACC,IADjBjB,GAAkB,EACoBkB,aAAczE,QACjD,CACH,IAKI2E,EAHED,EAFU,YAAOc,GACEjC,EAAiB,GAK1C,GAHY,QACa9D,KAAKiF,IAEVnB,EAAiB,GAAI,CACrC,IAAMI,EAAcvB,OAAOC,OAAPD,OAAA,IAAAA,QAAA,IAAAA,CAAA,GAAkBpC,GAAlB,GAAAoC,OAAA,IAAAA,CAAA,GAA0BmB,EAAiBmB,KAAWK,KAAK,IAE/E,GADgBtB,GAAciB,EAAUf,EAAaJ,GACxC,CACToB,EAAQ,2BAAO3E,GAAP,kBAAeuD,EAAiBmB,IACxClE,EAASmE,GACT,IAAMgB,EAAwC,IAAnBpC,GAA2C,IAAnBA,EAAwBA,EAAiB,EAAIA,EAC1FqC,EAAsC,IAAnBrC,GAA2C,IAAnBA,EAAwBgC,EAAe,EAAIA,EAAe,EAC3GzE,EAAa,2BACND,GADK,IAERF,MAAOgF,EACP/E,IAAKgF,UAGT,GAAuB,IAAnBrC,GAA2C,IAAnBA,EAAsB,CAAC,IAAD,EACxCsC,EAAYtC,EAAiB,EAC7BuC,EAAcvC,EAAiB,EACrCoB,EAAQ,2BACD3E,GADC,uBAEHuD,EAAiB,KAFd,cAGHsC,EAAYnB,GAHT,IAKRlE,EAASmE,GACT7D,EAAa,2BACND,GADK,IAERF,MAAOmF,EACPlF,IAAKkF,EAAc,UAEpB,GAAuB,IAAnBvC,EAAsB,CAAC,IAAD,EACvBsC,EAAYtC,EAAiB,EAC7BwC,EAAexC,EAAiB,EACtCoB,EAAQ,2BACD3E,GADC,uBAEHuD,EAAiB,KAFd,cAGHwC,EAAe,KAHZ,cAIHF,EAAYnB,GAJT,IAMRlE,EAASmE,GACT7D,EAAa,2BACND,GADK,IAERF,MAAOkF,EACPjF,IAAKiF,EAAY,UAElB,GAAuB,IAAnBtC,GAA2C,IAAnBA,EAAsB,CACrD,IAAMwC,EAAexC,EACrBzC,EAAa,2BACND,GADK,IAERF,MAAOoF,EACPnF,IAAKmF,EAAe,UAIxBpB,EAAQ,eAAO3E,GACfU,GAAWD,QAInBkE,EAAQ,eAAO3E,GACfU,GAAWD,GAGP,OAARN,QAAQ,IAARA,KAAWiC,OAAOC,OAAOsC,GAAUI,KAAK,OAiGwCiB,aAlNnE,SAAC1C,GAClBD,GAAkBC,IAkNX2C,QAjRK,SAAC3C,GACTxD,IAAoBqB,IACpBC,GAAe,GACfE,EAAoB,MA8QCtB,MAAOmB,EAAcwD,GAAW,GAAIuB,UA3E/C,SAAC5C,GAAO,IACf6C,EAAiC7C,EAAjC6C,IAAc5C,EAAmBD,EAA5BE,OAASD,eACrB,GAAY,cAAR4C,GAA+B,WAARA,EACA,IAAnB5C,GACAD,EAAE8C,iBACF7B,GAAgB,CAACC,IAAKjB,EAAgBkB,aAAczE,KAEpDsD,EAAE8C,sBAGH,GAAY,eAARD,GAAgC,cAARA,EAAqB,CACpD,IAAIvB,EAAmB,eAARuB,EAAuB5C,EAAiB,EAAIA,EAAiB,EACtEsB,EAAiB,eAARsB,EAAuB5C,EAAiB,EAAIqB,EAAW,EACtE1D,EAAc,2BACPD,GADM,IAETN,MAAOiE,EACPhE,IAAKiE,OA4DNwB,aAAa,MAAMC,QAtDR,SAAC,GAA+C,IAArC/C,EAAoC,EAA7CC,OAASD,eACvBgD,GAD2D,EAAnBC,eACXrH,OAAOqH,eAAeC,QAAQ,QAC3DC,EAAQH,EAAS7D,QAAU,GAAK6D,EAAWA,EAASxC,MAAM,EAAG,IAC7DJ,EAAcvB,OAAOC,OAAOrC,GAAO+E,KAAK,IACxC4B,EAAYhD,EAAYI,MAAM,EAAGR,GACjCqD,EAAYjD,EAAYI,MAAMR,EAAiBmD,EAAMhE,QACvD8B,EAAMjB,EACNsD,EAAc,eAAO7G,GACrB8G,EAAa,GACjB,YAAIJ,GAAOrC,SAAQ,SAAC9B,EAAI+B,GAEpBuC,EADArC,GAAO,GACejC,EACNkB,GAAclB,EAAIH,OAAOC,OAAOwE,GAAgB9B,KAAK,IAAKP,GAEtEsC,EAAWC,KAAKxE,IAEhBsE,EAAerC,GAAOzD,EAAayD,GACnCsC,EAAWC,KAAKhG,EAAayD,QAGrC,IAAMwC,EAAiB,CAACL,GAAD,OAAeG,EAAf,CAA2BF,IAAW7B,KAAK,IAClEvE,EAAS,2BACFR,GACA6B,GAAamF,MA+B8BC,aA1B3B,SAAC3D,GACHX,GAAsB3C,GAApCoD,YACWrD,GAAwC,KAArBsB,IAA4BF,GAC7DG,EAAoBzB,IAwBjBqH,aApBgB,SAAC5D,GACHX,GAAsB3C,GAApCoD,YACWrD,GAAmBsB,IAAqBF,GACtDG,EAAoB,KAiBiB6F,OAbxB,SAAC7D,GACGX,GAAsB3C,GAApCoD,YACWtD,GAAmBqB,GACjCC,GAAe,IAU4Cf,SAAUA,EAAUC,SAAUA,IEpStF8G,MA9Bf,WAAgB,IAAD,EACe7G,mBAAS,IADxB,mBACG8G,GADH,WAELnH,EAAY,YACZC,EAAW,SAACH,GACdqH,EAASrH,IAEb,OACI,sBAAKE,UAAU,MAAf,UACI,wBAAOA,UAAU,QAAjB,UACI,sBAAMA,UAAU,gBAAhB,mBACA,gCACI,cAACN,EAAD,CAAoBC,KAAK,aAAaC,iBAAiB,EAAOI,UAAWA,EAAWF,MAAM,GACtEG,SAAUA,EAAUJ,iBAAiB,IACzD,sBAAMG,UAAU,UAAhB,8BAIR,wBAAOA,UAAU,QAAjB,UACI,sBAAMA,UAAU,gBAAhB,mBACA,gCACI,cAACN,EAAD,CAAoBC,KAAK,aAAaC,iBAAiB,EAAMI,UAAWA,EAAWF,MAAM,GACrEG,SAAUA,EAAUJ,iBAAiB,IACzD,sBAAMG,UAAU,UAAhB,kCCdLoH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,SAO5BZ,M","file":"static/js/main.f08d9f4a.chunk.js","sourcesContent":["const ua = window.navigator?.userAgent ?? \"\";\n\nfunction searchMobil(ua) {\n    const regex = /Mobile|Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|mini/i\n    return regex.test(ua)\n}\nexport const ie = (ua.indexOf(\"MSIE \") !== -1) || (ua.indexOf(\"Trident/\") !== -1);\nexport const mobile = window.hasOwnProperty('ontouchstart') && searchMobil(ua)\nexport const ieMobile = /iemobile/i.test(ua);\nexport const iphone = /iphone/i.test(ua) && !ieMobile;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useState, useEffect, useRef} from 'react';\nimport {mobile} from \"./utils\";\nimport {DELETE_CONTENT_BACKWARD} from './constants'\n\nfunction ReactInputDateMask({\n                                mask = 'dd.mm.yyyy',\n                                showMaskOnFocus = false,\n                                showMaskOnHover = false,\n                                value: inputValue = '',\n                                className = '',\n                                onChange = undefined,\n                                disabled = false,\n                                readOnly = false\n                            }) {\n    const [value, setValue] = useState('')\n    const [toggleCursor, setCursor] = useState(false)\n    const [positionCursor, setPosCursor] = useState({\n        start: 0,\n        end: 1,\n    })\n    const [letterObject, setLetterObject] = useState({})\n    const [moveCursor, setMoveCursor] = useState({\n        start: '',\n        end: ''\n    })\n    const [maskOnFocus, setMaskOnFocus] = useState(false)\n    const [statePlaceholder, setStatePlaceholder] = useState('')\n    const myRef = useRef(null);\n\n    useEffect(() => {\n        myRef.current.setSelectionRange(positionCursor.start, positionCursor.end)\n    }, [positionCursor.start, positionCursor.end, toggleCursor])\n\n    useEffect(() => {\n        myRef.current.setSelectionRange(moveCursor.start, moveCursor.end)\n    }, [moveCursor.start, moveCursor.end])\n\n    useEffect(() => {\n        const value = inputValue ? inputValue : mask\n        const valueObject = createObject(value)\n        setValue(valueObject)\n        if (!showMaskOnFocus || inputValue) setMaskOnFocus(true)\n    }, [inputValue, showMaskOnFocus])\n\n    useEffect(() => {\n        const letterObject = createObject(mask)\n        setLetterObject(letterObject)\n        myRef.current.setSelectionRange(0, 1)\n    }, [mask])\n\n    const onFocus = (e) => {\n        if (showMaskOnFocus && !maskOnFocus) {\n            setMaskOnFocus(true)\n            setStatePlaceholder('')\n        }\n\n    }\n\n    const findDigitsOrLettersInValue = ({value, looking}) => {\n        const separator = value['3']\n        const regex = {\n            digits: /[0-9]/g,\n            letters: /[mMyYdD]/\n        }\n        const resultArray = Object.values(value).filter(el => el !== separator).map((el) => el.search(regex[looking])).filter(el => el === 0)\n        return resultArray.length\n    }\n\n    const isCurrValueHaveDigits = (currValue) => {\n        const quantityDigits = findDigitsOrLettersInValue({value: currValue, looking: 'digits'})\n        const resultIndexLetters = Object.values(currValue).findIndex(el => {\n            const regex = /[mMyYdD]/\n            const result = el.search(regex)\n            return result === 0\n        })\n        const quantityLetters = findDigitsOrLettersInValue({value: currValue, looking: 'letters'})\n        return {\n            allDigits: Boolean(quantityDigits === 8),\n            indexLetter: resultIndexLetters,\n            allLetters: Boolean(quantityLetters === 8)\n        }\n    }\n\n    const trackingCursorPos = (e) => {\n        const {allDigits, indexLetter} = isCurrValueHaveDigits(value)\n        let {selectionStart} = e.target;\n        if (allDigits) {\n            if (positionCursor.start !== selectionStart) {\n                setPosCursor({\n                    ...positionCursor,\n                    start: selectionStart,\n                    end: selectionStart + 1\n                })\n            }\n\n        } else if (indexLetter || indexLetter === 0) {\n            setPosCursor({\n                ...positionCursor,\n                start: indexLetter,\n                end: indexLetter + 1\n            })\n            setCursor(!toggleCursor)\n\n        } else {\n            setCursor(!toggleCursor)\n        }\n    }\n\n    const onClick = (e) => {\n        trackingCursorPos(e)\n    }\n\n    const onTouchStart = (e) => {\n        trackingCursorPos(e)\n    }\n\n    const checkOneValue = (val, valueString, position) => {\n        const regex = {\n            d: /([0-3]d)|(0[1-9]|[12][0-9]|3[01])|(d[0-9])/,\n            m: /([0-1]m)|(0[1-9]|1[012])|(m[0-2])/,\n            y: /([1-2]yyy)|((19|20)yy)|((19|20)\\dy)|((19|20)\\d\\d)|(y{2,3}\\d{1,2})|(yy\\dy)|([1-2]y\\d{1,2})/,\n            '/': /\\//,\n            '.': /\\./\n        }\n        const letter = letterObject[position]\n        let newVal;\n        if (letter === \"d\") {\n            newVal = mask === 'dd.mm.yyyy' || mask === 'dd/mm/yyyy' ? valueString.slice(0, 2) : valueString.slice(3, 5)\n        } else if (letter === \"m\") {\n            newVal = mask === 'dd.mm.yyyy' || mask === 'dd/mm/yyyy' ? valueString.slice(3, 5) : valueString.slice(0, 2)\n        } else if (letter === \"y\") {\n            newVal = valueString.slice(6, 10)\n        } else {\n            if (position === 3) {\n                newVal = valueString.slice(2, 3)\n            } else {\n                newVal = valueString.slice(5, 6)\n            }\n\n        }\n        const isMatch = regex[letter].test(newVal)\n        return isMatch\n    }\n\n    const createObject = (string) => {\n        let newObject = {};\n        [...string].forEach(((el, index) => {\n            newObject[index + 1] = el\n        }))\n        return newObject;\n    }\n\n    const onInput = (e) => {\n        let {target: {selectionStart, selectionEnd, value: curValue}, nativeEvent: {inputType}} = e;\n        if (mobile && inputType === DELETE_CONTENT_BACKWARD) {\n            selectionStart += 1;\n            deletingElement({pos: selectionStart, currentValue: value})\n        } else {\n            const valueArray = [...curValue];\n            const newPositionStart = selectionStart - 1;\n            const newValue = valueArray[newPositionStart]\n            const reg = /[\\d]/g;\n            const isValidValue = reg.test(newValue)\n            let newState;\n            if (isValidValue && selectionStart < 11) {\n                const valueString = Object.values({...value, [selectionStart]: newValue}).join('');\n                const isMatch = checkOneValue(newValue, valueString, selectionStart)\n                if (isMatch) {\n                    newState = {...value, [selectionStart]: newValue};\n                    setValue(newState)\n                    const newSelectionStart = (selectionStart === 2 || selectionStart === 5) ? selectionStart + 1 : selectionStart\n                    const newSelectionEnd = (selectionStart === 2 || selectionStart === 5) ? selectionEnd + 2 : selectionEnd + 1\n                    setPosCursor({\n                        ...positionCursor,\n                        start: newSelectionStart,\n                        end: newSelectionEnd\n                    })\n                } else {\n                    if (selectionStart === 1 || selectionStart === 4) {\n                        const nextValue = selectionStart + 1;\n                        const newPosStart = selectionStart + 2;\n                        newState = {\n                            ...value,\n                            [selectionStart]: '0',\n                            [nextValue]: newValue\n                        }\n                        setValue(newState)\n                        setPosCursor({\n                            ...positionCursor,\n                            start: newPosStart,\n                            end: newPosStart + 1,\n                        })\n                    } else if (selectionStart === 7) {\n                        const nextValue = selectionStart + 2;\n                        const nextSelStart = selectionStart + 1;\n                        newState = {\n                            ...value,\n                            [selectionStart]: '2',\n                            [nextSelStart]: '0',\n                            [nextValue]: newValue\n                        }\n                        setValue(newState)\n                        setPosCursor({\n                            ...positionCursor,\n                            start: nextValue,\n                            end: nextValue + 1\n                        })\n                    } else if (selectionStart === 3 || selectionStart === 6) {\n                        const nextSelStart = selectionStart;\n                        setPosCursor({\n                            ...positionCursor,\n                            start: nextSelStart,\n                            end: nextSelStart + 1\n                        })\n\n                    } else {\n                        newState = {...value}\n                        setCursor(!toggleCursor)\n                    }\n                }\n            } else {\n                newState = {...value}\n                setCursor(!toggleCursor)\n            }\n\n            onChange?.(Object.values(newState).join(''))\n        }\n    }\n\n    const deletingElement = ({pos, currentValue}) => {\n        const newValue = letterObject[pos];\n        let newState = {\n            ...currentValue,\n            [pos]: newValue\n        }\n        setValue(newState)\n        const newStart = pos - 1;\n        const newEnd = newStart + 1\n        setPosCursor((prevState) => {\n            return {\n                ...prevState,\n                start: newStart,\n                end: newEnd\n            }\n        })\n        onChange?.(Object.values(newState).join(''))\n    }\n\n    const onKeyDown = (e) => {\n        const {key, target: {selectionStart}} = e;\n        if (key === \"Backspace\" || key === \"Delete\") {\n            if (selectionStart !== 0) {\n                e.preventDefault()\n                deletingElement({pos: selectionStart, currentValue: value})\n            } else {\n                e.preventDefault()\n            }\n\n        } else if (key === 'ArrowRight' || key === 'ArrowLeft') {\n            let newStart = key === 'ArrowRight' ? selectionStart + 1 : selectionStart - 1;\n            const newEnd = key === 'ArrowRight' ? selectionStart + 2 : newStart + 1;\n            setMoveCursor({\n                ...moveCursor,\n                start: newStart,\n                end: newEnd\n            })\n\n        }\n    }\n\n    const onHandlePaste = ({target: {selectionStart}, clipboardData}) => {\n        const pasteRaw = (clipboardData || window.clipboardData).getData('text');\n        const paste = pasteRaw.length <= 10 ? pasteRaw : pasteRaw.slice(0, 10)\n        const valueString = Object.values(value).join('')\n        const prevValue = valueString.slice(0, selectionStart)\n        const postValue = valueString.slice(selectionStart + paste.length)\n        let pos = selectionStart;\n        let newValueObject = {...value};\n        let arrayValue = [];\n        [...paste].forEach((el, index) => {\n            pos += 1\n            newValueObject[pos] = el\n            const isMatch = checkOneValue(el, Object.values(newValueObject).join(''), pos)\n            if (isMatch) {\n                arrayValue.push(el)\n            } else {\n                newValueObject[pos] = letterObject[pos]\n                arrayValue.push(letterObject[pos])\n            }\n        })\n        const newValueString = [prevValue, ...arrayValue, postValue].join('')\n        setValue({\n            ...value,\n            ...createObject(newValueString)\n        })\n\n    }\n\n    const onHandleMouseEnter = (e) => {\n        const {allLetters} = isCurrValueHaveDigits(value)\n        if (allLetters && showMaskOnHover && statePlaceholder === '' && !maskOnFocus) {\n            setStatePlaceholder(mask)\n        }\n    }\n\n    const onHandleMouseLeave = (e) => {\n        const {allLetters} = isCurrValueHaveDigits(value)\n        if (allLetters && showMaskOnHover && statePlaceholder && !maskOnFocus) {\n            setStatePlaceholder('')\n        }\n    }\n\n    const onHandleBlur = (e) => {\n        const {allLetters} = isCurrValueHaveDigits(value)\n        if (allLetters && showMaskOnFocus && maskOnFocus) {\n            setMaskOnFocus(false)\n        }\n    }\n\n    const newState = Object.keys(value)?.length > 0 ? Object.values(value).join('') : value\n    return (\n        <input ref={myRef} placeholder={statePlaceholder} type='tel'\n               onClick={onClick} className={className} spellCheck=\"false\" onInput={onInput} onTouchStart={onTouchStart}\n               onFocus={onFocus} value={maskOnFocus ? newState : ''} onKeyDown={onKeyDown}\n               autoComplete='off' onPaste={onHandlePaste} onMouseEnter={onHandleMouseEnter}\n               onMouseLeave={onHandleMouseLeave} onBlur={onHandleBlur} disabled={disabled} readOnly={readOnly}></input>\n    )\n}\n\nexport {ReactInputDateMask as default}\n\n\n\n","export const DELETE_CONTENT_BACKWARD = 'deleteContentBackward'","import React, {useState} from 'react';\nimport './App.css';\nimport ReactInputDateMask from \"./ReactInputDateMask\";\n\nfunction App() {\n    const [state, setState] = useState('')\n    const className = 'inputMask'\n    const onChange = (value) => {\n        setState(value)\n    }\n    return (\n        <div className=\"App\">\n            <label className='label'>\n                <span className='example-label'>Date:</span>\n                <div>\n                    <ReactInputDateMask mask='dd/mm/yyyy' showMaskOnFocus={false} className={className} value=''\n                                        onChange={onChange} showMaskOnHover={true}/>\n                    <span className='comment'>dd/mm/yyyy</span>\n                </div>\n\n            </label>\n            <label className='label'>\n                <span className='example-label'>Date:</span>\n                <div>\n                    <ReactInputDateMask mask='mm/dd/yyyy' showMaskOnFocus={true} className={className} value=''\n                                        onChange={onChange} showMaskOnHover={true}/>\n                    <span className='comment'>mm/dd/yyyy</span>\n                </div>\n\n            </label>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n)\n;\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}